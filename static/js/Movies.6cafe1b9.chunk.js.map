{"version":3,"file":"static/js/Movies.6cafe1b9.chunk.js","mappings":"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","sources":["components/MovieList/MovieList.styled.js","components/MovieList/MovieList.jsx","pages/Movies/Movies.styled.js","pages/Movies/Movies.jsx","services/moviesApi.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const List = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, 200px);\n  gap: 10px;\n  justify-content: center;\n\n  @media screen and (min-width: 768px) {\n    grid-template-columns: repeat(auto-fill, 220px);\n    gap: 30px 30px;\n  }\n\n  @media screen and (min-width: 1200px) {\n    grid-template-columns: repeat(auto-fill, 250px);\n    gap: 40px 30px;\n  }\n`;\n\nexport const ListItem = styled.li`\n  &:hover,\n  &:focus {\n    box-shadow: 20px 20px 60px orange, -20px -20px 60px pink;\n  }\n\n  &:hover H2,\n  &:focus H2 {\n    color: orange;\n  }\n`;\n\nexport const A = styled(Link)`\n  text-decoration: none;\n`;\n\nexport const Img = styled.img`\n  width: 100%;\n  flex-grow: 1;\n`;\n\nexport const H2 = styled.h2`\n  text-decoration: none;\n  text-transform: uppercase;\n  margin: 0 auto;\n  font-size: 11px;\n  max-width: fit-content;\n  text-align: center;\n  color: white;\n  padding: 13px;\n\n  @media screen and (min-width: 768px) {\n    font-size: 12px;\n    padding: 15px;\n  }\n\n  @media screen and (min-width: 1200px) {\n    font-size: 14px;\n    padding: 15px;\n  }\n`;\n","import { List, H2, ListItem, A, Img } from './MovieList.styled';\nimport imageNotFound from '../../images/image-not-found.webp';\nimport PropTypes from 'prop-types';\nimport { useLocation } from 'react-router-dom';\n\nexport const MovieList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <List>\n      {movies.map(({ title, id, poster_path }) => (\n        <ListItem key={id}>\n          <A to={`/movies/${id}`} state={{from:location}}>\n            <Img\n              src={\n                poster_path === null\n                  ? imageNotFound\n                  : `https://image.tmdb.org/t/p/w500${poster_path}`\n              }\n              alt={title}\n\n            />\n            <H2>{title}</H2>\n          </A>\n        </ListItem>\n      ))}\n    </List>\n  );\n};\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string,\n      id: PropTypes.number,\n      poster_path: PropTypes.string,\n    })\n  )\n}","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-top: 30px;\n  margin-bottom: 40px;\n`;\n\nexport const Input = styled.input`\n  width: 150px;\n  padding: 10px;\n  border: none;\n  background-color: #252525;\n  box-shadow: 4px 4px 8px 0px rgba(34, 60, 80, 0.2);\n\n  &::placeholder {\n    color: white;\n    font-size: 11px;\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 350px;\n  padding: 15px;\n  /* border: 2px solid gray; */\n  border: none;\n  background-color: #252525;\n  box-shadow: 4px 4px 8px 0px rgba(34, 60, 80, 0.2);  \n\n  &::placeholder {\n    font-size: 14px;\n  }\n}\n\n  @media screen and (min-width: 1200px) {\n    width: 350px;\n  padding: 15px;\n  /* border: 2px solid gray; */\n  border: none;\n  background-color: #252525;\n  box-shadow: 4px 4px 8px 0px rgba(34, 60, 80, 0.2);  }\n\n\n\n  &:hover,\n  &:focus {\n    color: orange;\n    box-shadow: 4px 4px 8px 0px orange;\n  }\n`;\n\nexport const Button = styled.button`\n  padding: 10px;\n  cursor: pointer;\n  position: relative;\n  border: none;\n  background-color: transparent;\n  box-shadow: 4px 4px 8px 0px rgba(34, 60, 80, 0.2);\n  box-sizing: border-box;\n  transition: all 500ms ease;\n  color: white;\n  font-size: 11px;\n\n  \n\n\n  &:before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 0;\n    background: rgba(255, 165, 0, 0.6);\n    transition: all 500ms ease;\n  }\n\n  &:hover:before {\n    height: 100%;\n  }\n\n  @media screen and (min-width: 768px) {\n    padding: 15px;\n  cursor: pointer;\n  position: relative;\n  border: none;\n  background-color: transparent;\n  box-shadow: 4px 4px 8px 0px rgba(34, 60, 80, 0.2);\n  box-sizing: border-box;\n  transition: all 500ms ease;\n  color: white;\n  font-size: 14px;\n}\n\n  @media screen and (min-width: 1200px) {\n    padding: 15px;\n  cursor: pointer;\n  position: relative;\n  border: none;\n  background-color: transparent;\n  box-shadow: 4px 4px 8px 0px rgba(34, 60, 80, 0.2);\n  box-sizing: border-box;\n  transition: all 500ms ease;\n  color: white;\n  font-size: 14px;}\n`;\n","import { useState, useEffect } from 'react';\nimport { fetchMoviesByName } from 'services/moviesApi';\nimport { useSearchParams } from 'react-router-dom';\nimport { MovieList } from 'components/MovieList/MovieList';\nimport { Form, Input, Button } from './Movies.styled';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('moviename');\n\n  useEffect(() => {\n    if (query === null || query === '') return;\n    async function fetchMovie() {\n      const data = await fetchMoviesByName(query);\n      setMovies(data);\n    }\n    fetchMovie();\n  }, [query]);\n\n  const handleSubmit = (data, event) => {\n    event.preventDefault();\n    setSearchParams({ moviename: data.searchString });\n    data.reset();\n  };\n\n  return (\n    <>\n      <Form onSubmit={handleSubmit}>\n        <Input type=\"text\" name=\"moviename\" placeholder='Enter movie title'/>\n        <Button type=\"submit\">Search</Button>\n      </Form>\n      <MovieList movies={movies} />\n    </>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\nconst KEY = 'a97041c864f8f3eafd5ecc2c5648e42c';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport async function fetchTrendingMovies() {\n  const response = await axios('trending/movie/day', {\n    params: {\n      api_key: KEY,\n    },\n  });\n  return response.data.results;\n}\n\nexport async function fetchMoviesById(movie_id) {\n  const response = await axios(`/movie/${movie_id}`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n  return response.data;\n}\n\nexport async function fetchMoviesByName(query) {\n  const response = await axios('search/movie', {\n    params: {\n      api_key: KEY,\n      query: `${query}`,\n      page: 1,\n    },\n  });\n  return response.data.results;\n}\n\nexport async function fetchMoviesByCast(movie_id) {\n  const response = await axios(`/movie/${movie_id}/credits`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n  return response.data.cast;\n}\n\nexport async function fetchMoviesByReviews(movie_id) {\n  const response = await axios(`/movie/${movie_id}/reviews`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n  return response.data.results;\n}"],"names":["List","styled","ListItem","A","Link","Img","H2","MovieList","movies","location","useLocation","map","title","id","poster_path","to","state","from","src","imageNotFound","alt","Form","Input","Button","useState","setMovies","useSearchParams","searchParams","setSearchParams","query","get","useEffect","fetchMoviesByName","data","fetchMovie","onSubmit","event","preventDefault","moviename","searchString","reset","type","name","placeholder","KEY","fetchTrendingMovies","axios","params","api_key","response","results","fetchMoviesById","movie_id","page","fetchMoviesByCast","cast","fetchMoviesByReviews"],"sourceRoot":""}