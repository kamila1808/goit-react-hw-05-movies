{"version":3,"file":"static/js/Reviews.8e0adba7.chunk.js","mappings":"yNAEaA,EAAOC,EAAAA,GAAAA,GAAH,uHAQJC,EAAWD,EAAAA,GAAAA,IAAH,0W,SCkBrB,EAvBiB,WACf,IAAME,GAAUC,EAAAA,EAAAA,MAEhB,OACE,8BACsB,IAAnBD,EAAQE,OACP,+CAEA,SAACL,EAAD,UACGG,EAAQG,KAAI,YAA8B,IAA3BC,EAA0B,EAA1BA,GAAIC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC1B,OACI,UAACP,EAAD,YACE,0BAAG,wCAAH,IAA6BM,MAC7B,uBAAIC,MAFSF,EAKpB,OAKV,C,oJCpBYG,EAAkB,WAC7B,OAA4BC,EAAAA,EAAAA,UAAS,MAArC,eAAOC,EAAP,KAAeC,EAAf,KAEQC,GAAYC,EAAAA,EAAAA,MAAZD,QAMR,OAJAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAgBH,GAASI,KAAKL,EAC/B,GAAE,CAACC,IAEGF,CACR,EAEYO,EAAoB,WAC/B,IAAQL,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BH,EAAAA,EAAAA,UAAS,IAAvC,eAAOS,EAAP,KAAgBC,EAAhB,KAMA,OAJAL,EAAAA,EAAAA,YAAU,YACRM,EAAAA,EAAAA,IAAkBR,GAASI,KAAKG,EACjC,GAAE,CAACP,IAEGM,CACR,EAEYhB,EAAuB,WAClC,IAAQU,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BH,EAAAA,EAAAA,UAAS,IAAvC,eAAOR,EAAP,KAAgBoB,EAAhB,KAMA,OAJAP,EAAAA,EAAAA,YAAU,YACRQ,EAAAA,EAAAA,IAAqBV,GAASI,KAAKK,EACpC,GAAE,CAACT,IAEGX,CACR,C,mMCpCKsB,EAAM,mCAGL,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,qGACkBC,EAAAA,EAAAA,GAAM,qBAAsB,CACjDC,OAAQ,CACNC,QAASJ,KAHR,cACCK,EADD,yBAMEA,EAASC,KAAKC,SANhB,kEASA,SAAef,EAAtB,+CAAO,OAAP,oBAAO,WAA+BgB,GAA/B,wFACkBN,EAAAA,EAAAA,GAAM,UAAD,OAAWM,GAAY,CACjDL,OAAQ,CACNC,QAASJ,KAHR,cACCK,EADD,yBAMEA,EAASC,MANX,kEASA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAAiCC,GAAjC,wFACkBR,EAAAA,EAAAA,GAAM,eAAgB,CAC3CC,OAAQ,CACNC,QAASJ,EACTU,MAAM,GAAD,OAAKA,GACVC,KAAM,KALL,cACCN,EADD,yBAQEA,EAASC,KAAKC,SARhB,kEAWA,SAAeV,EAAtB,+CAAO,OAAP,oBAAO,WAAiCW,GAAjC,wFACkBN,EAAAA,EAAAA,GAAM,UAAD,OAAWM,EAAX,YAA+B,CACzDL,OAAQ,CACNC,QAASJ,KAHR,cACCK,EADD,yBAMEA,EAASC,KAAKM,MANhB,kEASA,SAAeb,EAAtB,+CAAO,OAAP,oBAAO,WAAoCS,GAApC,wFACkBN,EAAAA,EAAAA,GAAM,UAAD,OAAWM,EAAX,YAA+B,CACzDL,OAAQ,CACNC,QAASJ,KAHR,cACCK,EADD,yBAMEA,EAASC,KAAKC,SANhB,kEAxCPL,EAAAA,EAAAA,SAAAA,QAAyB,8B","sources":["components/Reviews/Reviews.styled.js","components/Reviews/Reviews.jsx","hooks/useFetchMovie.js","services/moviesApi.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const List = styled.ul`\n  margin-top: 10px;\n  padding: 0;\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n`;\n\nexport const ListItem = styled.div`\n  border: 1px dotted grey;\n  margin-bottom: 10px;\n  padding: 5px;\n  font-size: 11px;\n\n  @media screen and (min-width: 768px) {\n    border: 1px dotted grey;\n    margin-bottom: 10px;\n    padding: 7px;\n  }\n\n  @media screen and (min-width: 1200px) {\n    border: 1px dotted grey;\n    margin-bottom: 10px;\n    padding: 7px;\n  }\n`;\n","import { useFetchMovieReviews } from 'hooks/useFetchMovie';\nimport { List, ListItem } from './Reviews.styled';\nimport PropTypes from 'prop-types';\n\n\n const Reviews = () => {\n  const reviews = useFetchMovieReviews();\n\n  return (\n    <>\n      {reviews.length === 0 ? (\n        'There are no any reviews for this movie yet'\n      ) : (\n        <List>\n          {reviews.map(({ id, author, content }) => {\n            return (\n                <ListItem key={id}>\n                  <p><strong>Author:</strong> {author}</p>\n                  <p>{content}</p>\n                </ListItem>\n               );\n          })}\n        </List>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n\nReviews.propTypes = {\n  reviews: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number,\n      author: PropTypes.string,\n      content: PropTypes.string,\n    })\n  )\n}","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMoviesById } from 'services/moviesApi';\nimport { fetchMoviesByReviews } from 'services/moviesApi';\nimport { fetchMoviesByCast } from 'services/moviesApi';\n\nexport const useFetchMovieId = () => {\n  const [movies, setMovies] = useState(null);\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    fetchMoviesById(movieId).then(setMovies);\n  }, [movieId]);\n\n  return movies;\n};\n\nexport const useFetchMovieCast = () => {\n  const { movieId } = useParams();\n  const [credits, setCredits] = useState([]);\n\n  useEffect(() => {\n    fetchMoviesByCast(movieId).then(setCredits)\n  }, [movieId])\n\n  return credits;\n}\n\nexport const useFetchMovieReviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    fetchMoviesByReviews(movieId).then(setReviews)\n  }, [movieId])\n\n  return reviews;\n}\n\n\n","import axios from 'axios';\n\nconst KEY = 'a97041c864f8f3eafd5ecc2c5648e42c';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport async function fetchTrendingMovies() {\n  const response = await axios('trending/movie/day', {\n    params: {\n      api_key: KEY,\n    },\n  });\n  return response.data.results;\n}\n\nexport async function fetchMoviesById(movie_id) {\n  const response = await axios(`/movie/${movie_id}`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n  return response.data;\n}\n\nexport async function fetchMoviesByName(query) {\n  const response = await axios('search/movie', {\n    params: {\n      api_key: KEY,\n      query: `${query}`,\n      page: 1,\n    },\n  });\n  return response.data.results;\n}\n\nexport async function fetchMoviesByCast(movie_id) {\n  const response = await axios(`/movie/${movie_id}/credits`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n  return response.data.cast;\n}\n\nexport async function fetchMoviesByReviews(movie_id) {\n  const response = await axios(`/movie/${movie_id}/reviews`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n  return response.data.results;\n}"],"names":["List","styled","ListItem","reviews","useFetchMovieReviews","length","map","id","author","content","useFetchMovieId","useState","movies","setMovies","movieId","useParams","useEffect","fetchMoviesById","then","useFetchMovieCast","credits","setCredits","fetchMoviesByCast","setReviews","fetchMoviesByReviews","KEY","fetchTrendingMovies","axios","params","api_key","response","data","results","movie_id","fetchMoviesByName","query","page","cast"],"sourceRoot":""}