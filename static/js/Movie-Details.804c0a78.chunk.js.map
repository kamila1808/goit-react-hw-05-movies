{"version":3,"file":"static/js/Movie-Details.804c0a78.chunk.js","mappings":"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","sources":["hooks/useFetchMovie.js","pages/MovieDetails/MovieDetails.styled.js","pages/MovieDetails/MovieDetails.jsx","services/moviesApi.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMoviesById } from 'services/moviesApi';\nimport { fetchMoviesByReviews } from 'services/moviesApi';\nimport { fetchMoviesByCast } from 'services/moviesApi';\n\nexport const useFetchMovieId = () => {\n  const [movies, setMovies] = useState(null);\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    fetchMoviesById(movieId).then(setMovies);\n  }, [movieId]);\n\n  return movies;\n};\n\nexport const useFetchMovieCast = () => {\n  const { movieId } = useParams();\n  const [credits, setCredits] = useState([]);\n\n  useEffect(() => {\n    fetchMoviesByCast(movieId).then(setCredits)\n  }, [movieId])\n\n  return credits;\n}\n\nexport const useFetchMovieReviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    fetchMoviesByReviews(movieId).then(setReviews)\n  }, [movieId])\n\n  return reviews;\n}\n\n\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  margin-top: 30px;\n  justify-content: center;\n  max-width: 1000px;\n  margin-right: auto;\n  margin-left: auto;\n  padding: 20px;\n  box-shadow: 20px 20px 60px #bebebe, -20px -20px 60px #ffffff;\n`;\n\nexport const List = styled.ul`\n  /* list-style: none; */\n  margin-left: 15px;\n  padding: 0;\n`;\n\nexport const DescriptionWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  margin-left: 30px;\n`;\n\nexport const ListItem = styled.li`\nmargin-bottom: 5px;\n`\n\nexport const A = styled(NavLink)`\ntext-decoration: none;\ncolor: black;\n\n&:hover,\n&:focus{\n    color: orange;\n}\n\n&:active{\n    color: orange;\n}\n`\n\nexport const AddInfoWrapper = styled.div`\nborder: 1px dotted black;\npadding: 10px;\n`\n\nexport const AddInfoTitle = styled.h3`\nmargin-top: 5px;\nmargin-bottom: 10px;\n`\n\nexport const Button = styled.button`\nmargin-top: 15px;\nmargin-left: 15px;\npadding: 15px;\ncursor: pointer;\nposition: relative;\nborder: none;\nbackground-color: transparent; \nbox-shadow: 4px 4px 8px 0px rgba(34, 60, 80, 0.2);\nbox-sizing: border-box;\ntransition: all 500ms ease; \ncolor: grey;\n\n\n/* border: 2px solid gray; */\n/* background: linear-gradient(45deg, rgb(255, 165, 0), rgb(255, 192, 203), rgb(128, 128, 128)); */\n\n\n&:hover,\n&:focus {\n    color: black;\n    font-weight: 800;\n\n} \n\n&:before {\n\tcontent:'';\n\tposition: absolute;\n\ttop: 0;\n\tleft: 0;\n\twidth: 100%;\n\theight: 0;\n    background: linear-gradient(45deg, rgb(255, 209, 125, 0.5) 18%, rgb(255, 213, 221, 0.5), rgb(220, 220, 220, 0.5) 77%);\n        /* background: rgba(255,255,255,0.3); */\n    \ttransition: all 500ms ease;\n}\n\n&:hover:before {\n\theight: 100%;\n}\n`\n","import { useFetchMovieId } from 'hooks/useFetchMovie';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { Outlet } from 'react-router-dom';\nimport {\n  Wrapper,\n  List,\n  DescriptionWrapper,\n  ListItem,\n  A,\n  AddInfoWrapper,\n  AddInfoTitle,\n  Button\n} from './MovieDetails.styled';\n\nconst MovieDetails = () => {\n  const movie = useFetchMovieId();\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  return (\n    movie && (\n      <>\n        <Button\n          onClick={() => {\n            navigate(location.state.from);\n          }}\n        >\n          Go Back\n        </Button>\n        <Wrapper>\n          <img\n            src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`}\n            alt={movie.title}\n            width=\"300\"\n            height=\"400\"\n          />\n          <DescriptionWrapper>\n            <h2>{movie.title}</h2>\n            <p>\n              <strong>User score:</strong> {Math.floor(movie.vote_average * 10)}\n              %\n            </p>\n            <p>\n              <strong>Overview:</strong> {movie.overview}\n            </p>\n            <p>\n              <strong>Genres: </strong>\n              {movie.genres\n                ? movie.genres.map(genre => genre.name).join(', ')\n                : 'No information'}\n            </p>\n            <AddInfoWrapper>\n              <AddInfoTitle>Additional Information</AddInfoTitle>\n              \n              <nav>\n\n                <List>\n                  <ListItem>\n                    \n                    <A to=\"cast\" state={location.state}>Cast</A>\n                  </ListItem>\n                  <ListItem>\n                    <A to=\"reviews\" state={location.state}>Reviews</A>\n                  </ListItem>\n                </List>\n              </nav>\n              <Outlet />\n            </AddInfoWrapper>\n          </DescriptionWrapper>\n        </Wrapper>\n      </>\n    )\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\nconst KEY = 'a97041c864f8f3eafd5ecc2c5648e42c';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport async function fetchTrendingMovies() {\n  const response = await axios('trending/movie/day', {\n    params: {\n      api_key: KEY,\n    },\n  });\n  return response.data.results;\n}\n\nexport async function fetchMoviesById(movie_id) {\n  const response = await axios(`/movie/${movie_id}`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n  return response.data;\n}\n\nexport async function fetchMoviesByName(query) {\n  const response = await axios('search/movie', {\n    params: {\n      api_key: KEY,\n      query: `${query}`,\n      page: 1,\n    },\n  });\n  return response.data.results;\n}\n\nexport async function fetchMoviesByCast(movie_id) {\n  const response = await axios(`/movie/${movie_id}/credits`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n  return response.data.cast;\n}\n\nexport async function fetchMoviesByReviews(movie_id) {\n  const response = await axios(`/movie/${movie_id}/reviews`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n  return response.data.results;\n}"],"names":["useFetchMovieId","useState","movies","setMovies","movieId","useParams","useEffect","fetchMoviesById","then","useFetchMovieCast","credits","setCredits","fetchMoviesByCast","useFetchMovieReviews","reviews","setReviews","fetchMoviesByReviews","Wrapper","styled","List","DescriptionWrapper","ListItem","A","NavLink","AddInfoWrapper","AddInfoTitle","Button","movie","navigate","useNavigate","location","useLocation","onClick","state","from","src","poster_path","alt","title","width","height","Math","floor","vote_average","overview","genres","map","genre","name","join","to","KEY","fetchTrendingMovies","axios","params","api_key","response","data","results","movie_id","fetchMoviesByName","query","page","cast"],"sourceRoot":""}